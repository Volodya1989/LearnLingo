{"version":3,"file":"static/js/656.c33b8d53.chunk.js","mappings":"wIAEO,MAAMA,E,QAAsBC,GAAOC,GAAG;;;;eCC7C,MAeA,EAfeC,KAEXC,EAAAA,EAAAA,KAACJ,EAAmB,CAAAK,UAClBD,EAAAA,EAAAA,KAACE,EAAAA,GAAa,CACZC,YAAY,UACZC,OAAO,OACPC,UAAU,SACVC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,K,+GCXiBZ,EAAAA,GAAOa,GAAG;;EAArC,MAIMC,EAAcd,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;EAiCxBc,GANOf,EAAAA,GAAOgB,CAAC;;;;;EAMLhB,EAAAA,GAAOiB,EAAE;;;;;;;GAQnBC,EAAYlB,EAAAA,GAAOgB,CAAC;;;;;EAMpBG,EAAQnB,EAAAA,GAAOoB,KAAK;;;;;;;;;;;;EAcpBC,EAAUrB,EAAAA,GAAOsB,OAAO;;;;;EAaxBC,GANYvB,EAAAA,GAAOa,GAAG;;;;EAMdb,EAAAA,GAAOwB,KAAK;;;;;;;;;;;;;IAa7BC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OACZC,EACD,wCADa,EAId;;;;;;cAMWP;;;;;;IAMVQ,IAAA,IAAC,MAAEC,EAAQ,IAAID,EAAA,OACfC,GACA,aACMT,uDAIP;GAEUU,EAAe7B,EAAAA,GAAOgB,CAAC;;;;EAMvBc,EAAa9B,EAAAA,GAAOwB,KAAK;;;;;;;;;;;;;;;;;;;;;;;EAwBzBO,EAAe/B,EAAAA,GAAOC,GAAG;;;;;EAOzB+B,EAAkBhC,EAAAA,GAAOC,GAAG;;;;;iECpIlC,MAyNP,EAzNqBgC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OAEX,SACJC,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,OACE,QAAEC,IAAYC,EAAAA,EAAAA,OACbC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,KAClCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAASC,IAAcJ,EAAAA,EAAAA,UAAS,WAChCK,EAAQC,IAAaN,EAAAA,EAAAA,WAAS,IAC9BO,EAAWC,IAAgBR,EAAAA,EAAAA,WAAS,IACpCS,EAAWC,IAAgBV,EAAAA,EAAAA,WAAS,IACpCW,EAAoBC,IAAyBZ,EAAAA,EAAAA,WAAS,IACtDa,EAAoBC,IAAyBd,EAAAA,EAAAA,WAAS,GAGvDe,GAAgBC,EAAAA,EAAAA,cACpBC,IACgC,MAA1BA,EAAEC,cAAcnC,QAGS,UAAzBkC,EAAEC,cAAcC,MAClBjB,EAASe,EAAEC,cAAcnC,MAAMqC,QAEJ,aAAzBH,EAAEC,cAAcC,MAClBpB,EAAYkB,EAAEC,cAAcnC,MAAMqC,QACpC,GAEF,CAAClB,EAAUH,IAaPsB,EAAaA,CAACC,EAASC,KAC3BC,EAAAA,GAAMC,MAAMH,EAAS,CACnBI,UAAW,iBACX,EASEC,EAAeC,IACnBhB,GAAsB,GAEA,KAAlBgB,EAAK9B,UAAkC,KAAf8B,EAAK3B,OAI3BY,IACFC,GAAsB,GACtBe,YAAW,KAfCC,IAACR,IAiBT,kEAhBRE,EAAAA,GAAMO,KAAKT,EAAS,CAClBI,UAAW,kBAiBPM,QAAQC,IAAI,yBAAyB,GACpC,OAGLlC,EAAY,IACZG,EAAS,IACTM,GAAa,GACbF,GAAU,GAGZjB,GACE6C,EAAAA,EAAAA,IAAM,CACJjC,MAAO2B,EAAK3B,MAAMkC,cAClBrC,SAAU8B,EAAK9B,YAEjBsC,MAAKR,IACL,IAAK,IAADS,EAAAC,EAEF,GADA9B,GAAa,GACL,OAAJoB,QAAI,IAAJA,GAAW,QAAPS,EAAJT,EAAMH,aAAK,IAAAY,GAAXA,EAAaf,QAAS,CACxB,MAAQiB,QAASC,GAAiBZ,EAClCI,QAAQC,IAAI,QAASO,GAErB,MAAMC,EAAkB,eAClBC,EAAgB,6CAChBC,EAAqB,4BACrBC,EAAa,uBAAuBhB,EAAKiB,KAAKC,IAAI7C,kGAGtDoB,EADEmB,IAAiBC,EACR,kCACFD,IAAiBE,EACf,GAAGA,gBACLF,IAAiBI,EACf,8BACFJ,IAAiBG,EACf,GAAGA,KAEH,6CAGbrC,GAAU,GACVuB,YAAW,KACTvB,GAAU,EAAM,GACf,IACL,CACS,OAAJsB,QAAI,IAAJA,GAAW,QAAPU,EAAJV,EAAMH,aAAK,IAAAa,GAAXA,EAAahB,UA1EFA,EA2ED,qBA1EnBE,EAAAA,GAAMuB,QAAQzB,EAAS,CACrBI,UAAW,kBA0EPpB,GAAU,GACVP,EAAY,IACZG,EAAS,IACTE,EAAW,cACXyB,YAAW,KACTmB,OAAOC,SAASC,KACd,uDAGF5C,GAAU,GACVF,EAAW,SAAS,GACnB,KAEP,CAAE,MAAOqB,GACPO,QAAQC,IAAI,QAASR,EAAMH,QAC7B,CA3FiB6B,IAAC7B,CA2FlB,KAtEAD,EAAW,yBAuEX,EAGE+B,GAAgBpC,EAAAA,EAAAA,cACpBC,IACOrB,GAAYe,GACfkB,YAAW,KACTrB,GAAa,EAAK,GACjB,IACL,GAEF,CAACZ,EAASe,IAMZ,OAHA0C,EAAAA,EAAAA,YAAU,KACRD,GAAe,GACd,CAACA,KAEF9F,EAAAA,EAAAA,KAAAgG,EAAAA,SAAA,CAAA/F,SACIgD,GAAcI,GAGd4C,EAAAA,EAAAA,MAACtF,EAAW,CAAAV,SAAA,EACVD,EAAAA,EAAAA,KAAC6B,EAAe,CAAA5B,SACbgD,GAAaI,IAAsBrD,EAAAA,EAAAA,KAACD,EAAAA,EAAM,OAG7CkG,EAAAA,EAAAA,MAACC,EAAAA,GAAoB,CAACC,UAAW,IAAMC,SAAS,YAAWnG,SAAA,EACzDD,EAAAA,EAAAA,KAACqG,EAAAA,GAAc,IAAG,QAEpBrG,EAAAA,EAAAA,KAACY,EAAO,CAAAX,SAAE,YACVD,EAAAA,EAAAA,KAACe,EAAS,CAAAd,SAAC,iHAKXgG,EAAAA,EAAAA,MAAA,QAAMK,SAAUpE,GAAaoC,GAAQD,EAAaC,KAAOrE,SAAA,CACtDmC,EAAOI,WACNxC,EAAAA,EAAAA,KAAC0B,EAAY,CAAAzB,SAAC,0BAEfmC,EAAOO,QAAS3C,EAAAA,EAAAA,KAAC0B,EAAY,CAAAzB,SAAC,wBAC/BgG,EAAAA,EAAAA,MAAC/E,EAAO,CAAAjB,SAAA,EACND,EAAAA,EAAAA,KAACoB,EAAK,IACAa,EAAS,QAAS,CAAEsE,UAAU,EAAM9E,MAAOkB,IAC/C6D,SAAU/C,EACVI,KAAK,QACLpC,MAAOkB,EACP8D,aAAa,MACbC,KAAM,UAER1G,EAAAA,EAAAA,KAACgB,EAAK,CAAC2F,QAAS,EAAE1G,SAAE,cAEtBgG,EAAAA,EAAAA,MAAC/E,EAAO,CAAAjB,SAAA,EACND,EAAAA,EAAAA,KAACoB,EAAK,IACAa,EAAS,WAAY,CACvBsE,UAAU,EACV9E,MAAOe,IAEToE,GAAI,CACFR,SAAU,YAEZI,SAAU/C,EACVI,KAAK,WACLpC,MAAOe,EACPiE,aAAa,MACbC,KAAMvD,EAAY,OAAS,cAE7BnD,EAAAA,EAAAA,KAAC4B,EAAY,CAACiF,QApKHC,KACrB1D,GAAcD,EAAU,EAmKwBlD,SAClCkD,GAA+BnD,EAAAA,EAAAA,KAAC+G,EAAAA,IAAe,KAAnC/G,EAAAA,EAAAA,KAACgH,EAAAA,IAAY,OAE7BhH,EAAAA,EAAAA,KAACgB,EAAK,CAAC2F,QAAS,EAAE1G,SAAE,iBAGtBD,EAAAA,EAAAA,KAAC2B,EAAU,CACTJ,UAAUiB,IAAYG,GAAQI,EAC9B2D,KAAK,SACLjF,MACEwB,GAAaI,EAAqB,gBAAkBR,WAzD5D7C,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KA+DR,C,sFC1OA,MAAMkH,EAAcC,EAAAA,EAAiB;;gBAE5B5F,IAAA,IAAC,YAAE6F,GAAa7F,EAAA,OAAM6F,EAAc,SAAW,QAAQ;;EAI1DC,EAAkBvH,EAAAA,GAAOC,GAAG;;;;;EAM5BuH,EAAoBxH,EAAAA,GAAOC,GAAG;;;;;;;;;;;;;;EAgB9BoG,GAAuBrG,EAAAA,EAAAA,IAAOwG,EAAAA,IAAgBiB,MAAM,CAC/DlD,UAAW,iBACXmD,eAAgB,QAChBC,cAAe,OACfC,kBAAmB,YACnB","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Login/Login.styled.jsx","components/Login/Login.jsx","components/Teachers/Teachers.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RotatingLinesStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 15%;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyled } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <RotatingLinesStyled>\n      <RotatingLines\n        strokeColor=\"#f4c550\"\n        margin=\"auto\"\n        textAlign=\"center\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </RotatingLinesStyled>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ModalDetailsStyled = styled.img`\n  positon: relative;\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: block;\n  margin: auto;\n  margin-top: 100px;\n  max-width: 600px;\n  background-color: #f7f7f7;\n  // padding-right: 20px;\n  // padding-left: 20px;\n  // padding-top: 20px;\n  // padding-bottom: 20px;\n  padding: 60px 60px;\n  border-radius: 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n    line-height: 1.07;\n    width: 600px;\n  }\n  @media screen and (min-width: 1100px) {\n    font-size: 30px;\n    line-height: 1.06;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: var(--subheadingFonSize);\n  line-height: 1.18;\n  margin-top: 10px;\n  margin-bottom: 25px;\n`;\nexport const Heading = styled.h3`\n  font-size: 40px;\n  line-height: calc(48 / 40);\n  font-weight: 500;\n  margin-bottom: 25px;\n  text-align: left;\n  letter-spacing: -0.02em;\n`;\nexport const DescrText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: calc(22 / 16);\n  text-align: left;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 300;\n  width: 200px;\n  color: #9ca5b5;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: all 0.2s ease;\n  pointer-events: none;\n  padding-left: 15px;\n`;\n\nexport const Wrapper = styled.section`\n  flex-direction: 'row';\n  alignitems: 'center';\n  position: relative;\n  margin-top: 30px;\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n`;\n\nexport const Field = styled.input`\n  display: flex;\n  border: 0;\n  font-size: 22px;\n  background-color: transparent;\n  padding-top: 10px;\n  border-bottom: 1px solid #f4c550;\n\n  outline: none;\n  width: 100%;\n  color: black;\n  overflow: hidden;\n\n  ${({ disabled }) =>\n    (disabled || '') &&\n    `\n    pointer-events: none;\n    \n  `}\n\n  &:focus {\n    border-color: #6118de;\n  }\n\n  &:focus ~ ${Label} {\n    transform: translateY(-40px);\n    // scale: 0.9;\n    color: #9ca5b5;\n  }\n\n  ${({ value = '' }) =>\n    value &&\n    `\n    & ~ ${Label} {\n      transform: translateY(-40px);\n\n    }\n  `}\n`;\nexport const ErrorMessage = styled.p`\n  font-size: 15px;\n  line-height: calc(18 / 12);\n  color: red;\n`;\n\nexport const MainButton = styled.input`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  height: Hug (60px) px;\n  padding: 16px 48px 16px 48px;\n  gap: 0px;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  border-radius: 12px;\n  opacity: 0px;\n  font-weight: 700;\n  background: #f4c550;\n  border: none;\n  font-size: 18px;\n  line-height: calc(28 / 18);\n  cursor: pointer;\n  &:hover {\n    transition: opacity 0.4s;\n    opacity: 0.8;\n    transition-timing-function: ease;\n  }\n`;\nexport const ProtectedEye = styled.div`\n  position: absolute;\n  top: 0;\n  right: 20px;\n  cursor: pointer;\n`;\n\nexport const ContainerLoader = styled.div`\n  position: absolute;\n  z-index: 10;\n  top: 1em;\n  left: 8em;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useCallback, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useFetch from 'use-http';\nimport {\n  Description,\n  Heading,\n  Label,\n  Field,\n  Wrapper,\n  ErrorMessage,\n  MainButton,\n  DescrText,\n  ProtectedEye,\n  ContainerLoader,\n} from './Login.styled';\nimport { ToastContainer } from 'react-toastify';\nimport { StyledToastContainer } from 'components/Teachers/Teachers.styled';\nimport Loader from 'components/Loader';\nimport { IoEyeOffOutline, IoEyeOutline } from 'react-icons/io5';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nexport const Login = () => {\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { loading } = useFetch();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [BtnName, setBtnName] = useState('Log In');\n  const [active, setActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isSubmitSuccessful, setIsSubmitSuccessful] = useState(false);\n  const [isServerStartingUp, setIsServerStartingUp] = useState(true);\n\n  //setting query state on change and passing it as props to search component\n  const onQueryChange = useCallback(\n    e => {\n      if (e.currentTarget.value === ' ') {\n        return;\n      }\n      if (e.currentTarget.name === 'email') {\n        setEmail(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === 'password') {\n        setPassword(e.currentTarget.value.trim());\n      }\n    },\n    [setEmail, setPassword]\n  );\n\n  const togglePassword = () => {\n    setIsVisible(!isVisible);\n  };\n\n  //common method success notifications\n  const toastSuccess = (message, _) => {\n    toast.success(message, {\n      className: 'toast-message',\n    });\n  };\n  const toastError = (message, _) => {\n    toast.error(message, {\n      className: 'toast-message',\n    });\n  };\n\n  const toastInfo = (message, _) => {\n    toast.info(message, {\n      className: 'toast-message',\n    });\n  };\n\n  const onSubmitForm = data => {\n    setIsSubmitSuccessful(true);\n\n    if (data.password === '' && data.email === '') {\n      toastError('Please provide details');\n      return;\n    } else {\n      if (isServerStartingUp) {\n        setIsServerStartingUp(false);\n        setTimeout(() => {\n          toastInfo(\n            `Please wait as it takes few more seconds for server to wake up.`\n          );\n          console.log('Server is starting up.');\n        }, 8500);\n      }\n\n      setPassword('');\n      setEmail('');\n      setIsLoading(true);\n      setActive(true);\n    }\n\n    dispatch(\n      logIn({\n        email: data.email.toLowerCase(),\n        password: data.password,\n      })\n    ).then(data => {\n      try {\n        setIsLoading(false);\n        if (data?.error?.message) {\n          const { payload: errorMessage } = data;\n          console.log('ERROR', errorMessage);\n\n          const emailInUseError = 'Email in use';\n          const passwordError = 'PASSWORD should have a minimum length of 6';\n          const passwrodWrongError = 'Email or password invalid';\n          const emailError = `\"email\" with value \"${data.meta.arg.email}\" fails to match the required pattern: /^\\\\w+([.-]?\\\\w+)*@\\\\w+([.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$/`;\n\n          if (errorMessage === emailInUseError) {\n            toastError('Please provide different email.');\n          } else if (errorMessage === passwordError) {\n            toastError(`${passwordError} characters.`);\n          } else if (errorMessage === emailError) {\n            toastError('Please provide valid Email.');\n          } else if (errorMessage === passwrodWrongError) {\n            toastError(`${passwrodWrongError}.`);\n          } else {\n            toastError(`Please try again as server error occured.`);\n          }\n\n          setActive(true);\n          setTimeout(() => {\n            setActive(false);\n          }, 4000);\n        }\n        if (!data?.error?.message) {\n          toastSuccess(`You are logging...`);\n          setActive(true);\n          setPassword('');\n          setEmail('');\n          setBtnName('Logging...');\n          setTimeout(() => {\n            window.location.href =\n              'https://volodya1989.github.io/learn-lingo/#/teachers';\n            // window.location.href = `http://localhost:3000/learn-lingo/#/teachers`;\n\n            setActive(false);\n            setBtnName('Log In');\n          }, 2000);\n        }\n      } catch (error) {\n        console.log('error', error.message);\n      }\n    });\n  };\n\n  const handleLoading = useCallback(\n    e => {\n      if (!loading && !isSubmitSuccessful) {\n        setTimeout(() => {\n          setIsLoading(true);\n        }, 1000);\n      }\n    },\n    [loading, isSubmitSuccessful]\n  );\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n  return (\n    <>\n      {!isLoading && !isSubmitSuccessful ? (\n        <Loader />\n      ) : (\n        <Description>\n          <ContainerLoader>\n            {isLoading && isSubmitSuccessful && <Loader />}\n          </ContainerLoader>\n\n          <StyledToastContainer autoClose={4000} position=\"top-right\">\n            <ToastContainer />;\n          </StyledToastContainer>\n          <Heading>{`Log In`}</Heading>\n          <DescrText>\n            Welcome back! Please enter your credentials to access your account\n            and continue your search for an teacher.\n          </DescrText>\n\n          <form onSubmit={handleSubmit(data => onSubmitForm(data))}>\n            {errors.password && (\n              <ErrorMessage>Password is required.</ErrorMessage>\n            )}\n            {errors.email && <ErrorMessage>Email is required.</ErrorMessage>}\n            <Wrapper>\n              <Field\n                {...register('email', { required: true, value: email })}\n                onChange={onQueryChange}\n                name=\"email\"\n                value={email}\n                autoComplete=\"off\"\n                type={'text'}\n              />\n              <Label htmlFor={1}>{'Email'}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register('password', {\n                  required: true,\n                  value: password,\n                })}\n                sx={{\n                  position: 'relative',\n                }}\n                onChange={onQueryChange}\n                name=\"password\"\n                value={password}\n                autoComplete=\"off\"\n                type={isVisible ? 'text' : 'password'}\n              />\n              <ProtectedEye onClick={togglePassword}>\n                {!isVisible ? <IoEyeOutline /> : <IoEyeOffOutline />}\n              </ProtectedEye>\n              <Label htmlFor={1}>{'Password'}</Label>\n            </Wrapper>\n\n            <MainButton\n              disabled={password && email ? active : true}\n              type=\"submit\"\n              value={\n                isLoading && isSubmitSuccessful ? 'Submitting...' : BtnName\n              }\n            />\n          </form>\n        </Description>\n      )}\n    </>\n  );\n};\nexport default Login;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody{\n  overflow-y: ${({ isShowModal }) => (isShowModal ? 'hidden' : 'scroll')};\n}\n`;\n\nexport const StyledContainer = styled.div`\n  max-width: 1250px;\n  margin: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\nexport const DropdownContainer = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    gap: 20px;\n    margin-left: 45px;\n  }\n  @media screen and (min-width: 1150px) {\n    width: 1150px;\n  }\n`;\n\nexport const StyledToastContainer = styled(ToastContainer).attrs({\n  className: '.toast-message',\n  toastClassName: 'toast',\n  bodyClassName: 'body',\n  progressClassName: 'progress',\n})`\n  .toast-message {\n    width: 100%;\n    background-color: #f4c550;\n    color: #black;\n    font-size: 20px;\n  }\n`;\n"],"names":["RotatingLinesStyled","styled","div","Loader","_jsx","children","RotatingLines","strokeColor","margin","textAlign","strokeWidth","animationDuration","width","visible","img","Description","Heading","p","h3","DescrText","Label","label","Wrapper","section","Field","input","_ref","disabled","_ref2","value","ErrorMessage","MainButton","ProtectedEye","ContainerLoader","Login","dispatch","useDispatch","register","handleSubmit","formState","errors","useForm","loading","useFetch","password","setPassword","useState","email","setEmail","BtnName","setBtnName","active","setActive","isLoading","setIsLoading","isVisible","setIsVisible","isSubmitSuccessful","setIsSubmitSuccessful","isServerStartingUp","setIsServerStartingUp","onQueryChange","useCallback","e","currentTarget","name","trim","toastError","message","_","toast","error","className","onSubmitForm","data","setTimeout","toastInfo","info","console","log","logIn","toLowerCase","then","_data$error","_data$error2","payload","errorMessage","emailInUseError","passwordError","passwrodWrongError","emailError","meta","arg","success","window","location","href","toastSuccess","handleLoading","useEffect","_Fragment","_jsxs","StyledToastContainer","autoClose","position","ToastContainer","onSubmit","required","onChange","autoComplete","type","htmlFor","sx","onClick","togglePassword","IoEyeOffOutline","IoEyeOutline","GlobalStyle","createGlobalStyle","isShowModal","StyledContainer","DropdownContainer","attrs","toastClassName","bodyClassName","progressClassName"],"sourceRoot":""}
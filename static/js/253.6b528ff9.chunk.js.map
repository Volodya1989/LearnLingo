{"version":3,"file":"static/js/253.6b528ff9.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Registration/Registration.styled.jsx","components/Registration/Registration.jsx","components/Teachers/Teachers.styled.jsx","hooks/useLocalStorage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RotatingLinesStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 15%;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyled } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <RotatingLinesStyled>\n      <RotatingLines\n        strokeColor=\"#f4c550\"\n        margin=\"auto\"\n        textAlign=\"center\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </RotatingLinesStyled>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ModalDetailsStyled = styled.img`\n  positon: relative;\n`;\n\nexport const Description = styled.div`\n  position: relative;\n  display: block;\n  margin: auto;\n  margin-top: 100px;\n  max-width: 600px;\n  background-color: #f7f7f7;\n  padding: 60px 60px;\n  border-radius: 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n    line-height: 1.07;\n    width: 600px;\n  }\n  @media screen and (min-width: 1100px) {\n    font-size: 30px;\n    line-height: 1.06;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: var(--subheadingFonSize);\n  line-height: 1.18;\n  margin-top: 10px;\n  margin-bottom: 25px;\n`;\nexport const Heading = styled.h3`\n  font-size: 40px;\n  line-height: calc(48 / 40);\n  font-weight: 500;\n  margin-bottom: 25px;\n  text-align: left;\n  letter-spacing: -0.02em;\n`;\nexport const DescrText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: calc(22 / 16);\n  text-align: left;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 300;\n  width: 200px;\n  color: #9ca5b5;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: all 0.2s ease;\n  pointer-events: none;\n  padding-left: 15px;\n`;\n\nexport const Wrapper = styled.section`\n  flex-direction: 'row';\n  alignitems: 'center';\n  position: relative;\n  margin-top: 30px;\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n`;\n\nexport const Field = styled.input`\n  display: flex;\n  border: 0;\n  font-size: 22px;\n  background-color: transparent;\n  padding-top: 10px;\n  border-bottom: 1px solid #f4c550;\n\n  outline: none;\n  width: 100%;\n  color: black;\n  overflow: hidden;\n\n  ${({ disabled }) =>\n    (disabled || '') &&\n    `\n    pointer-events: none;\n    \n  `}\n\n  &:focus {\n    border-color: #6118de;\n  }\n\n  &:focus ~ ${Label} {\n    transform: translateY(-40px);\n    // scale: 0.9;\n    color: #9ca5b5;\n  }\n\n  ${({ value = '' }) =>\n    value &&\n    `\n    & ~ ${Label} {\n      transform: translateY(-40px);\n\n    }\n  `}\n`;\nexport const ErrorMessage = styled.p`\n  font-size: 15px;\n  line-height: calc(18 / 12);\n  color: red;\n`;\n\nexport const MainButton = styled.input`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  height: Hug (60px) px;\n  padding: 16px 48px 16px 48px;\n  gap: 0px;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  border-radius: 12px;\n  opacity: 0px;\n  font-weight: 700;\n  background: #f4c550;\n  border: none;\n  font-size: 18px;\n  line-height: calc(28 / 18);\n  cursor: pointer;\n  &:hover {\n    transition: opacity 0.4s;\n    opacity: 0.8;\n    transition-timing-function: ease;\n  }\n`;\nexport const ProtectedEye = styled.div`\n  position: absolute;\n  top: 0;\n  right: 20px;\n  cursor: pointer;\n`;\nexport const ContainerLoader = styled.div`\n  position: absolute;\n  z-index: 10;\n  top: 1em;\n  left: 8em;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useCallback, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useFetch from 'use-http';\nimport {\n  Description,\n  Heading,\n  Label,\n  Field,\n  Wrapper,\n  ErrorMessage,\n  MainButton,\n  DescrText,\n  ProtectedEye,\n  ContainerLoader,\n} from './Registration.styled';\nimport { ToastContainer } from 'react-toastify';\nimport { StyledToastContainer } from 'components/Teachers/Teachers.styled';\nimport Loader from 'components/Loader';\nimport { IoEyeOffOutline, IoEyeOutline } from 'react-icons/io5';\nimport { useDispatch } from 'react-redux';\nimport { register as reg } from 'redux/auth/operations';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nexport const Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const { loading } = useFetch();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [BtnName, setBtnName] = useState('Sign Up');\n  const [active, setActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [isSubmitSuccessful, setIsSubmitSuccessful] = useState(false);\n  const [isServerStartingUp, setIsServerStartingUp] = useLocalStorage(\n    'isServerUp',\n    true\n  );\n\n  const dispatch = useDispatch();\n\n  //setting query state on change and passing it as props to search component\n  const onQueryChange = useCallback(\n    e => {\n      if (e.currentTarget.value === ' ') {\n        return;\n      }\n      if (e.currentTarget.name === 'email') {\n        setEmail(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === 'password') {\n        setPassword(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === 'name') {\n        setName(e.currentTarget.value.trim());\n      }\n    },\n    [setEmail, setPassword, setName]\n  );\n\n  //common method success notifications\n  const toastSuccess = (message, _) => {\n    toast.success(message, {\n      className: 'toast-message',\n    });\n  };\n  const toastError = (message, _) => {\n    toast.error(message, {\n      className: 'toast-message',\n    });\n  };\n  const toastInfo = (message, _) => {\n    toast.info(message, {\n      className: 'toast-message',\n    });\n  };\n\n  const onSubmitForm = data => {\n    setIsSubmitSuccessful(true);\n    if (data.password === '' && data.email === '') {\n      toastError('Please provide details');\n      return;\n    } else {\n      if (isServerStartingUp) {\n        setIsServerStartingUp(false);\n        setTimeout(() => {\n          toastInfo(\n            `Please wait as it takes few more seconds for server to wake up.`\n          );\n          console.log('Server is starting up.');\n        }, 10500);\n      }\n\n      setPassword('');\n      setEmail('');\n      setName('');\n      setIsLoading(true);\n      setActive(true);\n    }\n\n    dispatch(\n      reg({\n        username: data.name,\n        email: data.email.toLowerCase(),\n        password: data.password,\n      })\n    ).then(data => {\n      try {\n        setIsLoading(false);\n        if (data?.error?.message) {\n          const { payload: errorMessage } = data;\n          setTimeout(() => {\n            setActive(false);\n          }, 2000);\n          setActive(true);\n          const emailInUseError = 'Email in use';\n          const passwordError = 'PASSWORD should have a minimum length of 6';\n          const emailError = `\"email\" with value \"${data.meta.arg.email}\" fails to match the required pattern: /^\\\\w+([.-]?\\\\w+)*@\\\\w+([.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$/`;\n          const usernameError =\n            'E11000 duplicate key error collection: Lingo.users index: username_1 dup key';\n          if (errorMessage === emailInUseError) {\n            toastError('Please provide different email.');\n          } else if (errorMessage === passwordError) {\n            toastError(`${passwordError} characters.`);\n          } else if (errorMessage === emailError) {\n            toastError('Please provide valid Email.');\n          } else if (errorMessage.includes(usernameError)) {\n            toastError('Please provide unique Username.');\n          } else {\n            toastError(`Please try again as server error occured.`);\n          }\n        }\n        if (!data?.error?.message) {\n          setBtnName('Signing up...');\n          setActive(true);\n          toastSuccess(\n            `${username}, please check your email to verify your registration.`\n          );\n          setTimeout(() => {\n            setBtnName('Sign up');\n            setActive(false);\n            window.location.href =\n              'https://volodya1989.github.io/learn-lingo/#/login';\n            // window.location.href = `http://localhost:3000/learn-lingo/#/login`;\n          }, 5000);\n        }\n      } catch (error) {\n        console.log('error', error);\n      }\n    });\n    const username = data.name;\n  };\n  const togglePassword = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const handleLoading = useCallback(\n    e => {\n      if (!loading && !isSubmitSuccessful) {\n        setTimeout(() => {\n          setIsLoading(true);\n        }, 1000);\n      }\n    },\n    [loading, isSubmitSuccessful]\n  );\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n  return (\n    <>\n      {!isLoading && !isSubmitSuccessful ? (\n        <Loader />\n      ) : (\n        <Description>\n          <ContainerLoader>\n            {isLoading && isSubmitSuccessful && <Loader />}\n          </ContainerLoader>\n          <StyledToastContainer autoClose={6000} position=\"top-right\">\n            <ToastContainer />;\n          </StyledToastContainer>\n          <Heading>{`Registration`}</Heading>\n          <DescrText>\n            Thank you for your interest in our platform! In order to register,\n            we need some information. Please provide us with the following\n            information\n          </DescrText>\n\n          <form onSubmit={handleSubmit(data => onSubmitForm(data))}>\n            {errors.password && (\n              <ErrorMessage>Password is required.</ErrorMessage>\n            )}\n            {errors.email && <ErrorMessage>Email is required.</ErrorMessage>}\n            {errors.name && <ErrorMessage>Name is required.</ErrorMessage>}\n\n            <Wrapper>\n              <Field\n                {...register('name', { required: true, value: name })}\n                onChange={onQueryChange}\n                name=\"name\"\n                value={name}\n                autoComplete=\"off\"\n                type={'text'}\n              />\n              <Label htmlFor={1}>{'Username'}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register('email', { required: true, value: email })}\n                onChange={onQueryChange}\n                name=\"email\"\n                value={email}\n                autoComplete=\"off\"\n                type={'text'}\n              />\n              <Label htmlFor={1}>{'Email'}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register('password', {\n                  required: true,\n                  value: password,\n                })}\n                sx={{\n                  position: 'relative',\n                }}\n                onChange={onQueryChange}\n                name=\"password\"\n                value={password}\n                autoComplete=\"off\"\n                type={isVisible ? 'text' : 'password'}\n              />\n              <ProtectedEye onClick={togglePassword}>\n                {!isVisible ? <IoEyeOutline /> : <IoEyeOffOutline />}\n              </ProtectedEye>\n              <Label htmlFor={1}>{'Password'}</Label>\n            </Wrapper>\n\n            <MainButton\n              disabled={active}\n              type=\"submit\"\n              value={\n                isLoading && isSubmitSuccessful ? 'Submitting...' : BtnName\n              }\n            />\n          </form>\n        </Description>\n      )}\n    </>\n  );\n};\nexport default Registration;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody{\n  overflow-y: ${({ isShowModal }) => (isShowModal ? 'hidden' : 'scroll')};\n}\n`;\n\nexport const StyledContainer = styled.div`\n  max-width: 1250px;\n  margin: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\nexport const DropdownContainer = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    gap: 20px;\n    margin-left: 45px;\n  }\n  @media screen and (min-width: 1150px) {\n    width: 1150px;\n  }\n`;\n\nexport const StyledToastContainer = styled(ToastContainer).attrs({\n  className: '.toast-message',\n  toastClassName: 'toast',\n  bodyClassName: 'body',\n  progressClassName: 'progress',\n})`\n  .toast-message {\n    width: 100%;\n    background-color: #f4c550;\n    color: #black;\n    font-size: 20px;\n  }\n`;\n","import { useState, useEffect } from 'react';\n//this hook gets and saves current state into localStorage\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setState];\n}\n"],"names":["RotatingLinesStyled","styled","div","Loader","_jsx","children","RotatingLines","strokeColor","margin","textAlign","strokeWidth","animationDuration","width","visible","img","Description","Heading","p","h3","DescrText","Label","label","Wrapper","section","Field","input","_ref","disabled","_ref2","value","ErrorMessage","MainButton","ProtectedEye","ContainerLoader","Registration","register","handleSubmit","formState","errors","useForm","loading","useFetch","password","setPassword","useState","email","setEmail","name","setName","BtnName","setBtnName","active","setActive","isLoading","setIsLoading","isVisible","setIsVisible","isSubmitSuccessful","setIsSubmitSuccessful","isServerStartingUp","setIsServerStartingUp","useLocalStorage","dispatch","useDispatch","onQueryChange","useCallback","e","currentTarget","trim","toastError","message","_","toast","error","className","onSubmitForm","data","setTimeout","toastInfo","info","console","log","reg","username","toLowerCase","then","_data$error","_data$error2","payload","errorMessage","emailInUseError","passwordError","emailError","meta","arg","usernameError","includes","success","window","location","href","toastSuccess","handleLoading","useEffect","_Fragment","_jsxs","StyledToastContainer","autoClose","position","ToastContainer","onSubmit","required","onChange","autoComplete","type","htmlFor","sx","onClick","togglePassword","IoEyeOffOutline","IoEyeOutline","GlobalStyle","createGlobalStyle","isShowModal","StyledContainer","DropdownContainer","attrs","toastClassName","bodyClassName","progressClassName","key","defaultValue","state","setState","_JSON$parse","JSON","parse","localStorage","getItem","setItem","stringify"],"sourceRoot":""}
{"version":3,"file":"static/js/438.31731a0f.chunk.js","mappings":"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","sources":["components/Teachers/Teachers.styled.jsx","components/Teachers/Teachers.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody{\n  overflow-y: ${({ isShowModal }) => (isShowModal ? 'hidden' : 'scroll')};\n}\n`;\n\nexport const StyledContainer = styled.div`\n  max-width: 1250px;\n  margin: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\nexport const DropdownContainer = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    gap: 20px;\n    padding-left: 45px;\n  }\n  @media screen and (min-width: 1150px) {\n    width: 1150px;\n  }\n`;\n\nexport const StyledToastContainer = styled(ToastContainer).attrs({\n  className: '.toast-message',\n  toastClassName: 'toast',\n  bodyClassName: 'body',\n  progressClassName: 'progress',\n})`\n  .toast-message {\n    width: 100%;\n    background-color: #f4c550;\n    color: #black;\n    font-size: 20px;\n  }\n`;\n","import { useEffect, useCallback, useState } from 'react';\nimport CardsList from 'components/CardsList';\nimport teachersAPI from '../../data/teachers.json';\nimport useLocalStorage from 'hooks/useLocalStorage';\nimport Button from 'components/Button';\nimport Dropdown from 'components/Dropdown';\nimport useFetch from 'use-http';\nimport Loader from 'components/Loader';\nimport Modal from 'components/Modal';\nimport TrialLesson from 'components/Modal/TrialLesson';\nimport {\n  StyledContainer,\n  DropdownContainer,\n  StyledToastContainer,\n  GlobalStyle,\n} from './Teachers.styled';\nimport { ToastContainer } from 'react-toastify';\n\nconst Teachers = () => {\n  const { loading } = useFetch();\n  const [teachers, setTeachers] = useLocalStorage('teachers', null);\n  const [languages, setLanguages] = useLocalStorage('languages', null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pageCounter, setPageCounter] = useState(() => 4);\n  const [isLoadMore, setIsLoadMore] = useState(true);\n  const [isShowModal, setIsShowModal] = useState(false);\n  const [modalProps, setModalProps] = useState(null);\n\n  const [selectedLanguage, setSelectedLanguage] = useLocalStorage(\n    'selectedLanguage',\n    'All'\n  );\n  const [selectedLevel, setSelectedLevel] = useLocalStorage(\n    'selectedLevel',\n    'All'\n  );\n  const [selectedPrice, setSelectedPrice] = useLocalStorage('selected', 'All');\n  const [levelOfLanguage, setLevelOfLanguage] = useLocalStorage(\n    'levelOfLanguage',\n    null\n  );\n  const [price, setPrice] = useLocalStorage('price', null);\n\n  const [filteredTeachers, setFilteredTeachers] = useLocalStorage(\n    'filteredTeachers',\n    null\n  );\n  const onFavoriteChange = useCallback(\n    (e, id, isFavorite) => {\n      const teachersModified = teachers?.map(obj => {\n        if (obj.id === id) {\n          return { ...obj, favorites: !isFavorite };\n        }\n        return obj;\n      });\n      const filteredModified = filteredTeachers?.map(obj => {\n        if (obj.id === id) {\n          return { ...obj, favorites: !isFavorite };\n        }\n        return obj;\n      });\n\n      setTeachers(teachersModified);\n      setFilteredTeachers(filteredModified);\n    },\n    [setFilteredTeachers, setTeachers, filteredTeachers, teachers]\n  );\n\n  const handleFilteredTeachers = useCallback(() => {\n    if (!teachers) return;\n    let filteredTeachers = teachers;\n\n    if (selectedLanguage === 'All') {\n      filteredTeachers = teachers;\n    }\n    if (selectedLevel === 'All') {\n      filteredTeachers = teachers;\n    }\n    if (selectedLanguage !== 'All') {\n      filteredTeachers = filteredTeachers?.filter(teacher => {\n        return teacher.languages.includes(selectedLanguage);\n      });\n    }\n    if (selectedLevel !== 'All') {\n      filteredTeachers = filteredTeachers?.filter(teacher => {\n        return teacher.levels.includes(selectedLevel);\n      });\n    }\n    if (selectedPrice !== 'All') {\n      filteredTeachers = filteredTeachers?.filter(teacher => {\n        return Number(teacher.price_per_hour) <= Number(selectedPrice);\n      });\n      filteredTeachers = filteredTeachers.sort(\n        (a, b) => b.price_per_hour - a.price_per_hour\n      );\n    }\n    const finalListFilteredTeachers = filteredTeachers.filter(\n      (_, index) => index < pageCounter\n    );\n    setFilteredTeachers(finalListFilteredTeachers);\n    if (finalListFilteredTeachers?.length + 1 <= pageCounter) {\n      setIsLoadMore(false);\n    } else {\n      setIsLoadMore(true);\n    }\n  }, [\n    teachers,\n    selectedLanguage,\n    setFilteredTeachers,\n    selectedLevel,\n    selectedPrice,\n    pageCounter,\n  ]);\n\n  // using this toggle to update state of the Modal window based on previous state\n  const toggleModal = useCallback(\n    e => {\n      setIsShowModal(prevIsShowModal => !prevIsShowModal);\n    },\n    [setIsShowModal]\n  );\n\n  //setting info that is displayed in Modal and passed as props\n  const onClickModal = useCallback(\n    (e, showModalInfo) => {\n      setModalProps(showModalInfo);\n      toggleModal();\n    },\n    [setModalProps, toggleModal]\n  );\n\n  useEffect(() => {\n    handleFilteredTeachers();\n  }, [handleFilteredTeachers]);\n\n  const handleLanguage = item => {\n    setSelectedLanguage(item);\n  };\n\n  const handleLevel = item => {\n    setSelectedLevel(item);\n  };\n\n  const handlePrice = item => {\n    setSelectedPrice(item);\n  };\n\n  const onLoadMore = useCallback(() => {\n    if (filteredTeachers?.length <= pageCounter) {\n      setIsLoadMore(false);\n    }\n    setPageCounter(prevCounter => prevCounter + 4);\n  }, [setPageCounter, filteredTeachers?.length, pageCounter]);\n  const handleLoading = useCallback(\n    e => {\n      if (loading) {\n        setIsLoading(false);\n      }\n      if (!teachers) {\n        setTeachers(teachersAPI);\n      }\n      if (!languages) {\n        setLanguages([\n          ...new Set(teachersAPI?.map(({ languages }) => languages)?.flat()),\n        ]);\n      }\n      if (!price) {\n        setPrice([20, 30, 40, 50]);\n      }\n      if (!levelOfLanguage) {\n        setLevelOfLanguage([\n          ...new Set(teachersAPI?.map(({ levels }) => [...levels]).flat()),\n        ]);\n      }\n      if (!loading) {\n        setTimeout(() => {\n          setIsLoading(true);\n        }, 1000);\n      }\n    },\n    [\n      loading,\n      setTeachers,\n      teachers,\n      languages,\n      setLanguages,\n      levelOfLanguage,\n      setLevelOfLanguage,\n      price,\n      setPrice,\n    ]\n  );\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n\n  return (\n    <StyledContainer>\n      <StyledToastContainer autoClose={2000} position=\"top-right\">\n        <ToastContainer />;\n      </StyledToastContainer>\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <DropdownContainer>\n            <Dropdown\n              dropdownName={'Language'}\n              selectedName={selectedLanguage}\n              handleClick={handleLanguage}\n              itemsMap={languages}\n              width={'210px'}\n            />\n            <Dropdown\n              dropdownName={'Level of knowledge'}\n              selectedName={selectedLevel}\n              handleClick={handleLevel}\n              itemsMap={levelOfLanguage}\n              width={'240px'}\n            />\n            <Dropdown\n              dropdownName={'Price'}\n              selectedName={selectedPrice}\n              handleClick={handlePrice}\n              itemsMap={price}\n              width={'100px'}\n            />\n          </DropdownContainer>\n          <GlobalStyle isShowModal={isShowModal} />\n\n          <CardsList\n            onFavoriteChange={onFavoriteChange}\n            onClick={onClickModal}\n            teachers={filteredTeachers}\n            title=\"List of Teachers\"\n            notFound=\"Teachers Not Found\"\n          />\n          {isLoadMore && <Button onLoad={onLoadMore} />}\n        </>\n      )}\n      {isShowModal && (\n        <Modal onClose={toggleModal}>\n          <TrialLesson onClose={toggleModal} details={modalProps} />\n        </Modal>\n      )}\n    </StyledContainer>\n  );\n};\n\nexport default Teachers;\n"],"names":["GlobalStyle","createGlobalStyle","_ref","isShowModal","StyledContainer","styled","div","DropdownContainer","StyledToastContainer","ToastContainer","attrs","className","toastClassName","bodyClassName","progressClassName","Teachers","loading","useFetch","teachers","setTeachers","useLocalStorage","languages","setLanguages","isLoading","setIsLoading","useState","pageCounter","setPageCounter","isLoadMore","setIsLoadMore","setIsShowModal","modalProps","setModalProps","selectedLanguage","setSelectedLanguage","selectedLevel","setSelectedLevel","selectedPrice","setSelectedPrice","levelOfLanguage","setLevelOfLanguage","price","setPrice","filteredTeachers","setFilteredTeachers","onFavoriteChange","useCallback","e","id","isFavorite","teachersModified","map","obj","favorites","filteredModified","handleFilteredTeachers","_filteredTeachers","_filteredTeachers2","_filteredTeachers3","filter","teacher","includes","levels","Number","price_per_hour","sort","a","b","finalListFilteredTeachers","_","index","length","toggleModal","prevIsShowModal","onClickModal","showModalInfo","useEffect","onLoadMore","prevCounter","handleLoading","_teachersAPI$map","teachersAPI","Set","flat","_ref2","setTimeout","_jsxs","children","autoClose","position","_jsx","_Fragment","Dropdown","dropdownName","selectedName","handleClick","item","itemsMap","width","CardsList","onClick","title","notFound","Button","onLoad","Loader","Modal","onClose","TrialLesson","details"],"sourceRoot":""}
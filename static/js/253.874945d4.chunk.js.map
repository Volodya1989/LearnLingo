{"version":3,"file":"static/js/253.874945d4.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Registration/Registration.styled.jsx","components/Registration/Registration.jsx","components/Teachers/Teachers.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RotatingLinesStyled = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 15%;\n`;\n","import { RotatingLines } from 'react-loader-spinner';\nimport { RotatingLinesStyled } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <RotatingLinesStyled>\n      <RotatingLines\n        strokeColor=\"#f4c550\"\n        margin=\"auto\"\n        textAlign=\"center\"\n        strokeWidth=\"5\"\n        animationDuration=\"0.75\"\n        width=\"96\"\n        visible={true}\n      />\n    </RotatingLinesStyled>\n  );\n};\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const ModalDetailsStyled = styled.img`\n  positon: relative;\n`;\n\nexport const Description = styled.div`\n  display: block;\n  margin: auto;\n  margin-top: 100px;\n  max-width: 600px;\n  background-color: #f7f7f7;\n  padding: 60px 60px;\n  border-radius: 30px;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  @media screen and (min-width: 768px) {\n    font-size: 30px;\n    line-height: 1.07;\n    width: 600px;\n  }\n  @media screen and (min-width: 1100px) {\n    font-size: 30px;\n    line-height: 1.06;\n  }\n`;\n\nexport const Text = styled.p`\n  font-size: var(--subheadingFonSize);\n  line-height: 1.18;\n  margin-top: 10px;\n  margin-bottom: 25px;\n`;\nexport const Heading = styled.h3`\n  font-size: 40px;\n  line-height: calc(48 / 40);\n  font-weight: 500;\n  margin-bottom: 25px;\n  text-align: left;\n  letter-spacing: -0.02em;\n`;\nexport const DescrText = styled.p`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: calc(22 / 16);\n  text-align: left;\n`;\nexport const Label = styled.label`\n  font-size: 18px;\n  font-weight: 300;\n  width: 200px;\n  color: #9ca5b5;\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  transition: all 0.2s ease;\n  pointer-events: none;\n  padding-left: 15px;\n`;\n\nexport const Wrapper = styled.section`\n  flex-direction: 'row';\n  alignitems: 'center';\n  position: relative;\n  margin-top: 30px;\n`;\n\nexport const StyledImg = styled.img`\n  border-radius: 50%;\n  width: 44px;\n  height: 44px;\n`;\n\nexport const Field = styled.input`\n  display: flex;\n  border: 0;\n  font-size: 22px;\n  background-color: transparent;\n  padding-top: 10px;\n  border-bottom: 1px solid #f4c550;\n\n  outline: none;\n  width: 100%;\n  color: black;\n  overflow: hidden;\n\n  ${({ disabled }) =>\n    (disabled || '') &&\n    `\n    pointer-events: none;\n    \n  `}\n\n  &:focus {\n    border-color: #6118de;\n  }\n\n  &:focus ~ ${Label} {\n    transform: translateY(-40px);\n    // scale: 0.9;\n    color: #9ca5b5;\n  }\n\n  ${({ value = '' }) =>\n    value &&\n    `\n    & ~ ${Label} {\n      transform: translateY(-40px);\n\n    }\n  `}\n`;\nexport const ErrorMessage = styled.p`\n  font-size: 15px;\n  line-height: calc(18 / 12);\n  color: red;\n`;\n\nexport const MainButton = styled.input`\n  width: 100%;\n  margin-left: auto;\n  margin-right: auto;\n  height: Hug (60px) px;\n  padding: 16px 48px 16px 48px;\n  gap: 0px;\n  display: flex;\n  justify-content: center;\n  margin-top: 25px;\n  border-radius: 12px;\n  opacity: 0px;\n  font-weight: 700;\n  background: #f4c550;\n  border: none;\n  font-size: 18px;\n  line-height: calc(28 / 18);\n  cursor: pointer;\n  &:hover {\n    transition: opacity 0.4s;\n    opacity: 0.8;\n    transition-timing-function: ease;\n  }\n`;\nexport const ProtectedEye = styled.div`\n  position: absolute;\n  top: 0;\n  right: 20px;\n  cursor: pointer;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useCallback, useEffect, useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport useFetch from 'use-http';\nimport {\n  Description,\n  Heading,\n  Label,\n  Field,\n  Wrapper,\n  ErrorMessage,\n  MainButton,\n  DescrText,\n  ProtectedEye,\n} from './Registration.styled';\nimport { ToastContainer } from 'react-toastify';\nimport { StyledToastContainer } from 'components/Teachers/Teachers.styled';\nimport Loader from 'components/Loader';\nimport { IoEyeOffOutline, IoEyeOutline } from 'react-icons/io5';\nimport { useDispatch } from 'react-redux';\nimport { register as reg } from 'redux/auth/operations';\n\nexport const Registration = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    // formState: { isSubmitSuccessful },\n  } = useForm();\n  const { loading } = useFetch();\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [BtnName, setBtnName] = useState('Sign Up');\n  const [active, setActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const dispatch = useDispatch();\n\n  //setting query state on change and passing it as props to search component\n  const onQueryChange = useCallback(\n    e => {\n      if (e.currentTarget.value === ' ') {\n        return;\n      }\n      if (e.currentTarget.name === 'email') {\n        setEmail(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === 'password') {\n        setPassword(e.currentTarget.value.trim());\n      }\n      if (e.currentTarget.name === 'name') {\n        setName(e.currentTarget.value.trim());\n      }\n    },\n    [setEmail, setPassword, setName]\n  );\n\n  //common method success notifications\n  const toastSuccess = (message, _) => {\n    toast.success(message, {\n      className: 'toast-message',\n    });\n  };\n  const toastError = (message, _) => {\n    toast.error(message, {\n      className: 'toast-message',\n    });\n  };\n\n  const onSubmitForm = data => {\n    dispatch(\n      reg({\n        username: data.name,\n        email: data.email.toLowerCase(),\n        password: data.password,\n      })\n    ).then(data => {\n      try {\n        if (data?.error?.message) {\n          setTimeout(() => {\n            setActive(false);\n          }, 2000);\n          setActive(true);\n          toastError(\n            `Provide valid email or password should have at least 6 characters`\n          );\n        }\n        if (!data?.error?.message) {\n          setPassword('');\n          setEmail('');\n          setName('');\n          setBtnName('Signing up...');\n          setActive(true);\n          toastSuccess(\n            `${username}, please check your email to verify your registration.`\n          );\n          setTimeout(() => {\n            setBtnName('Sign up');\n            setActive(false);\n            window.location.href =\n              'https://volodya1989.github.io/learn-lingo/#/login';\n          }, 5000);\n        }\n      } catch (error) {\n        console.log('error', error.message);\n      }\n    });\n    const username = data.name;\n  };\n  const togglePassword = () => {\n    setIsVisible(!isVisible);\n  };\n\n  const handleLoading = useCallback(\n    e => {\n      if (!loading) {\n        setTimeout(() => {\n          setIsLoading(true);\n        }, 1000);\n      }\n    },\n    [loading]\n  );\n\n  useEffect(() => {\n    handleLoading();\n  }, [handleLoading]);\n  return (\n    <>\n      {!isLoading ? (\n        <Loader />\n      ) : (\n        <Description>\n          <StyledToastContainer autoClose={6000} position=\"top-right\">\n            <ToastContainer />;\n          </StyledToastContainer>\n          <Heading>{`Registration`}</Heading>\n          <DescrText>\n            Thank you for your interest in our platform! In order to register,\n            we need some information. Please provide us with the following\n            information\n          </DescrText>\n\n          <form onSubmit={handleSubmit(data => onSubmitForm(data))}>\n            {errors.password && (\n              <ErrorMessage>Password is required.</ErrorMessage>\n            )}\n            {errors.email && <ErrorMessage>Email is required.</ErrorMessage>}\n            {errors.name && <ErrorMessage>Name is required.</ErrorMessage>}\n\n            <Wrapper>\n              <Field\n                {...register('name', { required: true, value: name })}\n                onChange={onQueryChange}\n                name=\"name\"\n                value={name}\n                autoComplete=\"off\"\n                type={'text'}\n              />\n              <Label htmlFor={1}>{'Username'}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register('email', { required: true, value: email })}\n                onChange={onQueryChange}\n                name=\"email\"\n                value={email}\n                autoComplete=\"off\"\n                type={'text'}\n              />\n              <Label htmlFor={1}>{'Email'}</Label>\n            </Wrapper>\n            <Wrapper>\n              <Field\n                {...register('password', {\n                  required: true,\n                  value: password,\n                })}\n                sx={{\n                  position: 'relative',\n                }}\n                onChange={onQueryChange}\n                name=\"password\"\n                value={password}\n                autoComplete=\"off\"\n                type={isVisible ? 'text' : 'password'}\n              />\n              <ProtectedEye onClick={togglePassword}>\n                {!isVisible ? <IoEyeOutline /> : <IoEyeOffOutline />}\n              </ProtectedEye>\n              <Label htmlFor={1}>{'Password'}</Label>\n            </Wrapper>\n\n            <MainButton disabled={active} type=\"submit\" value={BtnName} />\n          </form>\n        </Description>\n      )}\n    </>\n  );\n};\nexport default Registration;\n","import styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\nbody{\n  overflow-y: ${({ isShowModal }) => (isShowModal ? 'hidden' : 'scroll')};\n}\n`;\n\nexport const StyledContainer = styled.div`\n  max-width: 1250px;\n  margin: auto;\n  padding-left: 20px;\n  padding-right: 20px;\n`;\nexport const DropdownContainer = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    gap: 20px;\n    margin-left: 45px;\n  }\n  @media screen and (min-width: 1150px) {\n    width: 1150px;\n  }\n`;\n\nexport const StyledToastContainer = styled(ToastContainer).attrs({\n  className: '.toast-message',\n  toastClassName: 'toast',\n  bodyClassName: 'body',\n  progressClassName: 'progress',\n})`\n  .toast-message {\n    width: 100%;\n    background-color: #f4c550;\n    color: #black;\n    font-size: 20px;\n  }\n`;\n"],"names":["RotatingLinesStyled","styled","div","Loader","_jsx","children","RotatingLines","strokeColor","margin","textAlign","strokeWidth","animationDuration","width","visible","img","Description","Heading","p","h3","DescrText","Label","label","Wrapper","section","Field","input","_ref","disabled","_ref2","value","ErrorMessage","MainButton","ProtectedEye","Registration","register","handleSubmit","formState","errors","useForm","loading","useFetch","password","setPassword","useState","email","setEmail","name","setName","BtnName","setBtnName","active","setActive","isLoading","setIsLoading","isVisible","setIsVisible","dispatch","useDispatch","onQueryChange","useCallback","e","currentTarget","trim","onSubmitForm","data","reg","username","toLowerCase","then","_data$error","_data$error2","error","message","setTimeout","toast","className","toastSuccess","success","window","location","href","console","log","toastError","handleLoading","useEffect","_Fragment","_jsxs","StyledToastContainer","autoClose","position","ToastContainer","onSubmit","required","onChange","autoComplete","type","htmlFor","sx","onClick","togglePassword","IoEyeOffOutline","IoEyeOutline","GlobalStyle","createGlobalStyle","isShowModal","StyledContainer","DropdownContainer","attrs","toastClassName","bodyClassName","progressClassName"],"sourceRoot":""}